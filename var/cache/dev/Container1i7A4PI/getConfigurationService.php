<?php

namespace Container1i7A4PI;

use Symfony\Component\DependencyInjection\Argument\RewindableGenerator;
use Symfony\Component\DependencyInjection\Exception\RuntimeException;

/**
 * @internal This class has been auto-generated by the Symfony Dependency Injection Component.
 */
class getConfigurationService extends App_KernelDevDebugContainer
{
    /**
     * Gets the public 'Zenstruck\Foundry\Configuration' shared service.
     *
     * @return \Zenstruck\Foundry\Configuration
     */
    public static function do($container, $lazyLoad = true)
    {
        include_once \dirname(__DIR__, 4).'/vendor/zenstruck/foundry/src/Configuration.php';
        include_once \dirname(__DIR__, 4).'/vendor/zenstruck/foundry/src/StoryManager.php';
        include_once \dirname(__DIR__, 4).'/vendor/zenstruck/foundry/src/Instantiator.php';
        include_once \dirname(__DIR__, 4).'/vendor/fzaninotto/faker/src/Faker/Generator.php';
        include_once \dirname(__DIR__, 4).'/vendor/fzaninotto/faker/src/Faker/Factory.php';

        $container->services['Zenstruck\\Foundry\\Configuration'] = $instance = new \Zenstruck\Foundry\Configuration(($container->services['doctrine'] ?? $container->getDoctrineService()), new \Zenstruck\Foundry\StoryManager(new RewindableGenerator(function () use ($container) {
            return new \EmptyIterator();
        }, 0)));

        $instance->setInstantiator(new \Zenstruck\Foundry\Instantiator());
        $instance->setFaker(\Faker\Factory::create());

        return $instance;
    }
}
